import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from sklearn.datasets import load_iris

# 1. Load the Iris dataset
iris = load_iris()
X = pd.DataFrame(iris.data, columns=iris.feature_names)
y = pd.Series(iris.target, name='Species')

# 2. Train-Test Split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 3. Build ANN Model
model = Sequential()
model.add(Dense(10, input_dim=4, activation='relu'))  # Input + 1st hidden layer
model.add(Dense(8, activation='relu'))                # 2nd hidden layer
model.add(Dense(3, activation='softmax'))             # Output layer (3 classes)

# 4. Compile Model
model.compile(loss='sparse_categorical_crossentropy', optimizer='adam', metrics=['accuracy'])

# 5. Train Model
model.fit(X_train, y_train, epochs=100, batch_size=10, verbose=1)

# 6. Evaluate Model
loss, accuracy = model.evaluate(X_test, y_test, verbose=0)
print(f"\nðŸ”¹ ANN Model Accuracy: {accuracy:.4f}")
print(f"Loss: {loss:.4f}")

# 7. Predict and Report
y_pred = np.argmax(model.predict(X_test), axis=-1)
print("\nClassification Report:")
print(classification_report(y_test, y_pred, target_names=iris.target_names))
